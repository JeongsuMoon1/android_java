package org._1_android_java;

public class _1_Java_basic {
	
	// J2SE (java 2 platform, standard edition)
	// - 자바의 가장 기본이 되는 에디션
	// - 모든 자바 프로그램은 J2SE에서 제공되는 컴파일러와 JRE를 사용한다.
	
	// J2ME (java 2 platform, micro edition)
	// - 모바일 장비를 위한 에디션
	// - 휴대폰에 가장 적합한 버전
	// - 개발 시 사용할 J2SE의 버전은 1.3 이나 1.4 버전이 가장 적합함
	// - WIPI : JAVA언어를 기본으로 만들어진 국내 이통3사 통합 플랫폼
	//          J2ME와 유사한 부분이 상당히 많지만 다른점도 가지고 있다 
	// - Android : 스마트폰 전용 운용체저. J2ME 제품 군에는 속하지 않으며, JAVA기반으로 만들어진 새로운 운영체제.
	
	// J2EE (java 2 platform, enterprise edition)
	// - 기업용 환경에서 서비스하기 위한 어플리케이션을 개발할 떄 사용되는 버전
	// - 기본 J2SE가 필요하며 최신 버전의 J2SE를 사용하는 것을 권장한다.
	// - 주로 Web Application Service를 만들 때, 사용되며 그 밖에 다양한 기술들을 지원.
	// - Servlet : Web Service 를 위해 제공되는 기술.
	// - JSP(java server page) : 웹 서비스를 위해 제공되는 기술,
	// - EJB(enterprise java beans) : java에서 제공되는 분산 컴포넌트 기술로 비즈니스 로직이나 데이터, 메시지를 처리하는데 사용되어진다.
	// 								  전체 프로그램 내에서의 작은 부품들로 생각하면 된다.
	// - RMI(remote method invocation) : 프록시를 써서 원격에 있는 java 객체의 메서드를 실행시키는 기술.
	// - JNDI(java naming directory interface) : 자바 기술로 만들어진 객체에 이름을 붙여 찾을 수 있도록 단일 인터페이스를 제공
	// - JDBC(java database connector) : 여러 종류의 플랫폼을 통합할 수 있도록 독립적인 인터페이스를 제공
	// - JMS(java message service) : 여러가지 메시징 시스템에 대한 플랫폼 독립적인 인터페이스를 제공
	
	// 자바언어의 특성
	// - 단순성 : c, c++ 기반으로 탄생
	// - 복잡성 제거
	// - garbage collection 을 제공하여 개발로 하여금 메모리 관리에 대한 부분을 개발자가 직접하지 않아도 된다.
	
	// 객체지향(OOP : Obeject Oriented Programming)을 사용.
	//			  개발자가 만드는 모든 프로그래밍 코드들은 자동차 부품처럼 따로 만들어져서 하나로 조립되는 형태이다. 수 많은 객체들의 조합으로 프로그램이 만들어짐.
	//           
}
